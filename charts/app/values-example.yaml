name: "galactus"
kind: Deployment
replicas: 1
image:
  name: "galactus"
  tag: ""
imagePullSecrets:
  - name: docker-pullsecret
port: 80
revision: "prod-commit"
readinessProbe:
  timeoutSeconds: 2
  initialDelaySeconds: 3
  httpGet:
    path: /
    port: 80
livenessProbe:
  timeoutSeconds: 2
  initialDelaySeconds: 3
  httpGet:
    path: /
    port: 80
env:
  - name: CUSTOM_ENV
    value: foobar123
envFrom:
  - configMapRef:
      name: app-config
  - secretRef:
      name: app-secrets
waitDb: true
db:
  injectEnv: true
  envPrefix: POSTGRESQL
  enabled: true
  instances: 1
  size: 5Gi
  database: "foobar"
  owner: "postgres"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/database
            operator: In
            values:
            - "true"
  initdb:
    database: postgres
    owner: postgres
  clusterSpec:
    description: "Database description"
migration:
  enabled: true
  image:
    name: "migration"
    tag: ""
ingress:
  enabled: true
  host: "foobar.example.com"
  annotations: {}
  middlewares:
    - name: basic-auth
    - name: rate-limit
