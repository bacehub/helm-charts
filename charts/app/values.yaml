nameOverride: ""
fullnameOverride: ""
replicaCount: 1
kind: "Deployment"
revision: "latest"
image:
  repository: nginx
  pullPolicy: IfNotPresent
labels: {}

imagePullSecrets: []
env: []
envOverlay: []
envFrom: []
sidecar: []
service:
  enabled: true
  type: ClusterIP
  port: 3000
  name: http
  extraPorts: []

rabbitmq:
  enabled: false
  user: user
  secret: rabbitmq-auth
  replicateFrom: ""
  passwordKey: rabbitmq-password
  host: rabbitmq.rabbitmq.svc.cluster.local
  port: 5672

postgres:
  enabled: false
  envPrefix: POSTGRES
  instances: 2
  storage:
    size: 20Gi
    storageClass: "local-path"
  bootstrap: {}
  managed: {}
  postgresql: {}
  wait: false

reloader: false

secrets: []

configMaps: []

ingress:
  enabled: false
  entryPoints:
    - websecure
  match: Host(`replaceme.com`)
  middlewares: []
  # - name: auth-middleware
  #   namespace: default
  extraRoutes: []

initContainers: []

worker:
  enabled: false
  replicaCount: 1
  command: []

rover:
  enabled: false
  graphRef: ""

resources: {}

livenessProbe:
  timeoutSeconds: 2
  initialDelaySeconds: 3
  httpGet:
    path: /health
    port: 3000
readinessProbe:
  timeoutSeconds: 2
  initialDelaySeconds: 3
  httpGet:
    path: /health
    port: 3000

volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
serviceAccount:
  create: false
  automount: false
  annotations: {}
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
